{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./UrlInputBox.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UrlInputBox=_ref=>{let{onUrlFetched}=_ref;const[url,setUrl]=useState('');const[isLoading,setIsLoading]=useState(false);const handleFetchUrl=()=>{if(url){setIsLoading(true);// Simulate network request\nsetTimeout(()=>{setIsLoading(false);const fetchedContent=\"Fetched content from: \".concat(url,\"\\n\\n(Actual content fetching needs JavaScript implementation beyond this demo.)\");onUrlFetched(fetchedContent,url);// Pass content and URL back to App\n// setUrl(''); // Optionally clear URL input after fetch\n},2000);}else{alert(\"Please enter a URL.\");}};// Effect to call lucide.createIcons() if icons are added/changed dynamically\nuseEffect(()=>{if(window.lucide){window.lucide.createIcons();}},[isLoading]);return/*#__PURE__*/_jsxs(\"div\",{className:\"bento-box url-input-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"box-header\",children:[/*#__PURE__*/_jsx(\"i\",{\"data-lucide\":\"globe\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Website Scraper\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"box-description\",children:\"Enter a URL to fetch its content.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"url-input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"url\",value:url,onChange:e=>setUrl(e.target.value),placeholder:\"https://example.com\",disabled:isLoading}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleFetchUrl,disabled:isLoading||!url,children:[isLoading?/*#__PURE__*/_jsx(\"i\",{className:\"loading-icon-animate\"}):/*#__PURE__*/_jsx(\"i\",{\"data-lucide\":\"arrow-right-circle\"}),isLoading?'Fetching...':'Fetch']})]}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Fetching content...\"})]})]});};export default UrlInputBox;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","UrlInputBox","_ref","onUrlFetched","url","setUrl","isLoading","setIsLoading","handleFetchUrl","setTimeout","fetchedContent","concat","alert","window","lucide","createIcons","className","children","type","value","onChange","e","target","placeholder","disabled","onClick"],"sources":["/Users/yushaw/dev/context.isallyouneed.io/src/components/UrlInputBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './UrlInputBox.css';\n\nconst UrlInputBox = ({ onUrlFetched }) => {\n  const [url, setUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFetchUrl = () => {\n    if (url) {\n      setIsLoading(true);\n      // Simulate network request\n      setTimeout(() => {\n        setIsLoading(false);\n        const fetchedContent = `Fetched content from: ${url}\\n\\n(Actual content fetching needs JavaScript implementation beyond this demo.)`;\n        onUrlFetched(fetchedContent, url); // Pass content and URL back to App\n        // setUrl(''); // Optionally clear URL input after fetch\n      }, 2000);\n    } else {\n      alert(\"Please enter a URL.\");\n    }\n  };\n\n  // Effect to call lucide.createIcons() if icons are added/changed dynamically\n  useEffect(() => {\n    if (window.lucide) {\n      window.lucide.createIcons();\n    }\n  }, [isLoading]);\n\n  return (\n    <div className=\"bento-box url-input-box\">\n      <div className=\"box-header\">\n        <i data-lucide=\"globe\"></i>\n        <h2>Website Scraper</h2>\n      </div>\n      <p className=\"box-description\">Enter a URL to fetch its content.</p>\n      <div className=\"url-input-group\">\n        <input \n          type=\"url\" \n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          placeholder=\"https://example.com\"\n          disabled={isLoading}\n        />\n        <button onClick={handleFetchUrl} disabled={isLoading || !url}>\n          {isLoading ? <i className=\"loading-icon-animate\"></i> : <i data-lucide=\"arrow-right-circle\"></i>}\n          {isLoading ? 'Fetching...' : 'Fetch'}\n        </button>\n      </div>\n      {isLoading && (\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p>Fetching content...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UrlInputBox; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CACnC,KAAM,CAACE,GAAG,CAAEC,MAAM,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAAa,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIJ,GAAG,CAAE,CACPG,YAAY,CAAC,IAAI,CAAC,CAClB;AACAE,UAAU,CAAC,IAAM,CACfF,YAAY,CAAC,KAAK,CAAC,CACnB,KAAM,CAAAG,cAAc,0BAAAC,MAAA,CAA4BP,GAAG,mFAAiF,CACpID,YAAY,CAACO,cAAc,CAAEN,GAAG,CAAC,CAAE;AACnC;AACF,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACLQ,KAAK,CAAC,qBAAqB,CAAC,CAC9B,CACF,CAAC,CAED;AACAhB,SAAS,CAAC,IAAM,CACd,GAAIiB,MAAM,CAACC,MAAM,CAAE,CACjBD,MAAM,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,CAC7B,CACF,CAAC,CAAE,CAACT,SAAS,CAAC,CAAC,CAEf,mBACEN,KAAA,QAAKgB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCjB,KAAA,QAAKgB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnB,IAAA,MAAG,cAAY,OAAO,CAAI,CAAC,cAC3BA,IAAA,OAAAmB,QAAA,CAAI,iBAAe,CAAI,CAAC,EACrB,CAAC,cACNnB,IAAA,MAAGkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,mCAAiC,CAAG,CAAC,cACpEjB,KAAA,QAAKgB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnB,IAAA,UACEoB,IAAI,CAAC,KAAK,CACVC,KAAK,CAAEf,GAAI,CACXgB,QAAQ,CAAGC,CAAC,EAAKhB,MAAM,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACxCI,WAAW,CAAC,qBAAqB,CACjCC,QAAQ,CAAElB,SAAU,CACrB,CAAC,cACFN,KAAA,WAAQyB,OAAO,CAAEjB,cAAe,CAACgB,QAAQ,CAAElB,SAAS,EAAI,CAACF,GAAI,CAAAa,QAAA,EAC1DX,SAAS,cAAGR,IAAA,MAAGkB,SAAS,CAAC,sBAAsB,CAAI,CAAC,cAAGlB,IAAA,MAAG,cAAY,oBAAoB,CAAI,CAAC,CAC/FQ,SAAS,CAAG,aAAa,CAAG,OAAO,EAC9B,CAAC,EACN,CAAC,CACLA,SAAS,eACRN,KAAA,QAAKgB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCnB,IAAA,QAAKkB,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BlB,IAAA,MAAAmB,QAAA,CAAG,qBAAmB,CAAG,CAAC,EACvB,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}