{"ast":null,"code":"var _jsxFileName = \"/Users/yushaw/dev/context.isallyouneed.io/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport './index.css'; // Global styles\nimport Header from './components/Header';\nimport CodeInputBox from './components/CodeInputBox';\nimport UrlInputBox from './components/UrlInputBox';\nimport ContextOutputBox from './components/ContextOutputBox';\nimport SettingsBox from './components/SettingsBox';\nimport Footer from './components/Footer';\n\n// Dynamically load Lucide icons\n// const loadLucide = async () => {  // Remove this function\n//   if (window.lucide) {\n//     window.lucide.createIcons();\n//   } else {\n//     try {\n//       const lucideModule = await import('lucide-react');\n//       if (lucideModule && window.lucide) { // Check if lucide added itself to window\n//           window.lucide.createIcons();\n//       } else {\n//           // Fallback or manual setup if direct import doesn't auto-initialize\n//           // This might be needed if 'lucide-static' isn't the right way to use it in React\n//           // Or if using 'lucide-react' components directly is preferred.\n//           // For now, assuming the script in index.html still works or we adjust.\n//           console.warn('Lucide script might not be loaded or initialized correctly for dynamic icons after initial page load.');\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to load lucide-react:\", error);\n//     }\n//   }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contextText, setContextText] = useState('');\n  const [lastUrl, setLastUrl] = useState('');\n  const [processedFilesInfo, setProcessedFilesInfo] = useState([]); // Store info about processed files\n\n  useEffect(() => {\n    const scriptId = 'lucide-script';\n    let script = document.getElementById(scriptId);\n    if (!script) {\n      script = document.createElement('script');\n      script.id = scriptId;\n      script.src = \"https://unpkg.com/lucide-static@latest/dist/lucide.min.js\";\n      script.async = true;\n      script.onload = () => {\n        if (window.lucide) {\n          window.lucide.createIcons();\n        }\n      };\n      document.body.appendChild(script);\n    } else if (window.lucide) {\n      window.lucide.createIcons(); // If script already loaded, just run createIcons\n    }\n\n    // No cleanup needed for script if it's meant to persist across App mounts/unmounts\n    // If App can unmount and remount, a more robust script management might be needed.\n  }, []);\n\n  // General effect to refresh icons when major state changes occur\n  useEffect(() => {\n    if (window.lucide) {\n      window.lucide.createIcons();\n    }\n  }, [contextText, processedFilesInfo, lastUrl]); // Add dependencies that might add new icons\n\n  const handleUrlFetched = useCallback((content, url) => {\n    setContextText(prevText => prevText + `## Content from URL: ${url}\\n\\n${content}\\n\\n`);\n    setLastUrl(url);\n  }, []);\n  const handleFilesProcessed = useCallback(fileContents => {\n    let newContext = '';\n    const newFilesInfo = [];\n    fileContents.forEach(file => {\n      newContext += `## Content from File: ${file.name}\\n\\n${file.content}\\n\\n`;\n      newFilesInfo.push({\n        name: file.name,\n        type: file.type,\n        size: file.size\n      });\n    });\n    setContextText(prevText => prevText + newContext);\n    setProcessedFilesInfo(prevFiles => [...prevFiles, ...newFilesInfo]);\n  }, []);\n  const handleClearContext = useCallback(() => {\n    setContextText('');\n    setLastUrl('');\n    setProcessedFilesInfo([]);\n    // CodeInputBox internal state (displayed files) will be reset via a prop/key if needed\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"bento-grid\",\n      children: [/*#__PURE__*/_jsxDEV(CodeInputBox, {\n        onFilesProcessed: handleFilesProcessed\n      }, processedFilesInfo.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(UrlInputBox, {\n        onUrlFetched: handleUrlFetched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContextOutputBox, {\n        contextText: contextText,\n        onClearContext: handleClearContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingsBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DzCXDWmlH0eJD1hJABJDnWB87kc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Header","CodeInputBox","UrlInputBox","ContextOutputBox","SettingsBox","Footer","jsxDEV","_jsxDEV","App","_s","contextText","setContextText","lastUrl","setLastUrl","processedFilesInfo","setProcessedFilesInfo","scriptId","script","document","getElementById","createElement","id","src","async","onload","window","lucide","createIcons","body","appendChild","handleUrlFetched","content","url","prevText","handleFilesProcessed","fileContents","newContext","newFilesInfo","forEach","file","name","push","type","size","prevFiles","handleClearContext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilesProcessed","length","onUrlFetched","onClearContext","_c","$RefreshReg$"],"sources":["/Users/yushaw/dev/context.isallyouneed.io/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport './index.css'; // Global styles\nimport Header from './components/Header';\nimport CodeInputBox from './components/CodeInputBox';\nimport UrlInputBox from './components/UrlInputBox';\nimport ContextOutputBox from './components/ContextOutputBox';\nimport SettingsBox from './components/SettingsBox';\nimport Footer from './components/Footer';\n\n// Dynamically load Lucide icons\n// const loadLucide = async () => {  // Remove this function\n//   if (window.lucide) {\n//     window.lucide.createIcons();\n//   } else {\n//     try {\n//       const lucideModule = await import('lucide-react');\n//       if (lucideModule && window.lucide) { // Check if lucide added itself to window\n//           window.lucide.createIcons();\n//       } else {\n//           // Fallback or manual setup if direct import doesn't auto-initialize\n//           // This might be needed if 'lucide-static' isn't the right way to use it in React\n//           // Or if using 'lucide-react' components directly is preferred.\n//           // For now, assuming the script in index.html still works or we adjust.\n//           console.warn('Lucide script might not be loaded or initialized correctly for dynamic icons after initial page load.');\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to load lucide-react:\", error);\n//     }\n//   }\n// };\n\nfunction App() {\n  const [contextText, setContextText] = useState('');\n  const [lastUrl, setLastUrl] = useState('');\n  const [processedFilesInfo, setProcessedFilesInfo] = useState([]); // Store info about processed files\n\n  useEffect(() => {\n    const scriptId = 'lucide-script';\n    let script = document.getElementById(scriptId);\n    if (!script) {\n        script = document.createElement('script');\n        script.id = scriptId;\n        script.src = \"https://unpkg.com/lucide-static@latest/dist/lucide.min.js\";\n        script.async = true;\n        script.onload = () => {\n          if (window.lucide) {\n            window.lucide.createIcons();\n          }\n        };\n        document.body.appendChild(script);\n    } else if (window.lucide) {\n        window.lucide.createIcons(); // If script already loaded, just run createIcons\n    }\n\n    // No cleanup needed for script if it's meant to persist across App mounts/unmounts\n    // If App can unmount and remount, a more robust script management might be needed.\n  }, []);\n\n  // General effect to refresh icons when major state changes occur\n  useEffect(() => {\n    if (window.lucide) {\n      window.lucide.createIcons();\n    }\n  }, [contextText, processedFilesInfo, lastUrl]); // Add dependencies that might add new icons\n\n  const handleUrlFetched = useCallback((content, url) => {\n    setContextText(prevText => prevText + `## Content from URL: ${url}\\n\\n${content}\\n\\n`);\n    setLastUrl(url);\n  }, []);\n\n  const handleFilesProcessed = useCallback((fileContents) => {\n    let newContext = '';\n    const newFilesInfo = [];\n    fileContents.forEach(file => {\n      newContext += `## Content from File: ${file.name}\\n\\n${file.content}\\n\\n`;\n      newFilesInfo.push({name: file.name, type: file.type, size: file.size});\n    });\n    setContextText(prevText => prevText + newContext);\n    setProcessedFilesInfo(prevFiles => [...prevFiles, ...newFilesInfo]);\n  }, []);\n\n  const handleClearContext = useCallback(() => {\n    setContextText('');\n    setLastUrl('');\n    setProcessedFilesInfo([]);\n    // CodeInputBox internal state (displayed files) will be reset via a prop/key if needed\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <main className=\"bento-grid\">\n        <CodeInputBox onFilesProcessed={handleFilesProcessed} key={processedFilesInfo.length} /> {/* Add key to reset if needed */}\n        <UrlInputBox onUrlFetched={handleUrlFetched} />\n        <ContextOutputBox contextText={contextText} onClearContext={handleClearContext} />\n        <SettingsBox />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}