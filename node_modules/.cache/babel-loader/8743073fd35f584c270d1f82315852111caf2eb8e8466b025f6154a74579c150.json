{"ast":null,"code":"var _jsxFileName = \"/Users/yushaw/dev/context.isallyouneed.io/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport './index.css'; // Global styles\nimport Header from './components/Header';\nimport CodeInputBox from './components/CodeInputBox';\nimport UrlInputBox from './components/UrlInputBox';\nimport ContextOutputBox from './components/ContextOutputBox';\nimport SettingsBox from './components/SettingsBox';\nimport Footer from './components/Footer';\n\n// Dynamically load Lucide icons\n// const loadLucide = async () => {  // Remove this function\n//   if (window.lucide) {\n//     window.lucide.createIcons();\n//   } else {\n//     try {\n//       const lucideModule = await import('lucide-react');\n//       if (lucideModule && window.lucide) { // Check if lucide added itself to window\n//           window.lucide.createIcons();\n//       } else {\n//           // Fallback or manual setup if direct import doesn't auto-initialize\n//           // This might be needed if 'lucide-static' isn't the right way to use it in React\n//           // Or if using 'lucide-react' components directly is preferred.\n//           // For now, assuming the script in index.html still works or we adjust.\n//           console.warn('Lucide script might not be loaded or initialized correctly for dynamic icons after initial page load.');\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to load lucide-react:\", error);\n//     }\n//   }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contextText, setContextText] = useState('');\n  const [lastUrl, setLastUrl] = useState('');\n  const [processedFiles, setProcessedFiles] = useState([]); // To keep track of files added\n\n  useEffect(() => {\n    const scriptId = 'lucide-script';\n    let script = document.getElementById(scriptId);\n    if (!script) {\n      script = document.createElement('script');\n      script.id = scriptId;\n      script.src = \"https://unpkg.com/lucide-static@latest/dist/lucide.min.js\";\n      script.async = true;\n      script.onload = () => {\n        if (window.lucide) {\n          window.lucide.createIcons();\n        }\n      };\n      document.body.appendChild(script);\n    } else if (window.lucide) {\n      window.lucide.createIcons(); // If script already loaded, just run createIcons\n    }\n\n    // No cleanup needed for script if it's meant to persist across App mounts/unmounts\n    // If App can unmount and remount, a more robust script management might be needed.\n  }, []);\n\n  // General effect to refresh icons when major state changes occur\n  useEffect(() => {\n    if (window.lucide) {\n      window.lucide.createIcons();\n    }\n  }, [contextText, processedFiles, lastUrl]); // Add dependencies that might add new icons\n\n  const handleUrlFetched = useCallback((content, url) => {\n    setContextText(prevText => prevText + content + '\\n\\n');\n    setLastUrl(url);\n  }, []);\n  const handleFilesProcessed = useCallback((filesContent, newFiles) => {\n    // This is a placeholder. Actual file content processing will be more complex.\n    // For now, just appending a note about the files.\n    const fileNotes = newFiles.map(f => `Processed file: ${f.name}`).join('\\n');\n    setContextText(prevText => prevText + fileNotes + '\\n\\n');\n    setProcessedFiles(prevFiles => [...prevFiles, ...newFiles.map(f => f.name)]);\n  }, []);\n  const handleClearContext = useCallback(() => {\n    setContextText('');\n    setLastUrl('');\n    setProcessedFiles([]);\n    // Potentially reset CodeInputBox files state too, if it doesn't clear itself.\n    // This would require passing a reset trigger or managing its files state in App.js\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"bento-grid\",\n      children: [/*#__PURE__*/_jsxDEV(CodeInputBox, {\n        onFilesProcessed: handleFilesProcessed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UrlInputBox, {\n        onUrlFetched: handleUrlFetched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContextOutputBox, {\n        contextText: contextText,\n        onClearContext: handleClearContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingsBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ssjd5xyHkaBsdJPhLZPeTGGAK5o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Header","CodeInputBox","UrlInputBox","ContextOutputBox","SettingsBox","Footer","jsxDEV","_jsxDEV","App","_s","contextText","setContextText","lastUrl","setLastUrl","processedFiles","setProcessedFiles","scriptId","script","document","getElementById","createElement","id","src","async","onload","window","lucide","createIcons","body","appendChild","handleUrlFetched","content","url","prevText","handleFilesProcessed","filesContent","newFiles","fileNotes","map","f","name","join","prevFiles","handleClearContext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilesProcessed","onUrlFetched","onClearContext","_c","$RefreshReg$"],"sources":["/Users/yushaw/dev/context.isallyouneed.io/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport './index.css'; // Global styles\nimport Header from './components/Header';\nimport CodeInputBox from './components/CodeInputBox';\nimport UrlInputBox from './components/UrlInputBox';\nimport ContextOutputBox from './components/ContextOutputBox';\nimport SettingsBox from './components/SettingsBox';\nimport Footer from './components/Footer';\n\n// Dynamically load Lucide icons\n// const loadLucide = async () => {  // Remove this function\n//   if (window.lucide) {\n//     window.lucide.createIcons();\n//   } else {\n//     try {\n//       const lucideModule = await import('lucide-react');\n//       if (lucideModule && window.lucide) { // Check if lucide added itself to window\n//           window.lucide.createIcons();\n//       } else {\n//           // Fallback or manual setup if direct import doesn't auto-initialize\n//           // This might be needed if 'lucide-static' isn't the right way to use it in React\n//           // Or if using 'lucide-react' components directly is preferred.\n//           // For now, assuming the script in index.html still works or we adjust.\n//           console.warn('Lucide script might not be loaded or initialized correctly for dynamic icons after initial page load.');\n//       }\n//     } catch (error) {\n//       console.error(\"Failed to load lucide-react:\", error);\n//     }\n//   }\n// };\n\nfunction App() {\n  const [contextText, setContextText] = useState('');\n  const [lastUrl, setLastUrl] = useState('');\n  const [processedFiles, setProcessedFiles] = useState([]); // To keep track of files added\n\n  useEffect(() => {\n    const scriptId = 'lucide-script';\n    let script = document.getElementById(scriptId);\n    if (!script) {\n        script = document.createElement('script');\n        script.id = scriptId;\n        script.src = \"https://unpkg.com/lucide-static@latest/dist/lucide.min.js\";\n        script.async = true;\n        script.onload = () => {\n          if (window.lucide) {\n            window.lucide.createIcons();\n          }\n        };\n        document.body.appendChild(script);\n    } else if (window.lucide) {\n        window.lucide.createIcons(); // If script already loaded, just run createIcons\n    }\n\n    // No cleanup needed for script if it's meant to persist across App mounts/unmounts\n    // If App can unmount and remount, a more robust script management might be needed.\n  }, []);\n\n  // General effect to refresh icons when major state changes occur\n  useEffect(() => {\n    if (window.lucide) {\n      window.lucide.createIcons();\n    }\n  }, [contextText, processedFiles, lastUrl]); // Add dependencies that might add new icons\n\n  const handleUrlFetched = useCallback((content, url) => {\n    setContextText(prevText => prevText + content + '\\n\\n');\n    setLastUrl(url);\n  }, []);\n\n  const handleFilesProcessed = useCallback((filesContent, newFiles) => {\n    // This is a placeholder. Actual file content processing will be more complex.\n    // For now, just appending a note about the files.\n    const fileNotes = newFiles.map(f => `Processed file: ${f.name}`).join('\\n');\n    setContextText(prevText => prevText + fileNotes + '\\n\\n');\n    setProcessedFiles(prevFiles => [...prevFiles, ...newFiles.map(f => f.name)]);\n  }, []);\n\n  const handleClearContext = useCallback(() => {\n    setContextText('');\n    setLastUrl('');\n    setProcessedFiles([]);\n    // Potentially reset CodeInputBox files state too, if it doesn't clear itself.\n    // This would require passing a reset trigger or managing its files state in App.js\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <main className=\"bento-grid\">\n        <CodeInputBox onFilesProcessed={handleFilesProcessed} />\n        <UrlInputBox onUrlFetched={handleUrlFetched} />\n        <ContextOutputBox contextText={contextText} onClearContext={handleClearContext} />\n        <SettingsBox />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}