{"ast":null,"code":"var _jsxFileName = \"/Users/yushaw/dev/context.isallyouneed.io/src/pages/SimplePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { FileCode2, Globe, Copy, Download, Trash2, Check, Folder, ChevronRight, ChevronDown } from 'lucide-react';\nimport JSZip from 'jszip';\n\n// File blacklist patterns\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BLACKLIST_PATTERNS = [\n// Dependencies\n'node_modules/', 'vendor/', 'bower_components/', '.pnp/', '.yarn/',\n// Build outputs\n'dist/', 'build/', 'out/', '.next/', '.nuxt/', '.cache/', 'coverage/',\n// IDE & OS\n'.idea/', '.vscode/', '.DS_Store', 'Thumbs.db',\n// Version control\n'.git/', '.svn/', '.hg/',\n// Config files we want to skip\n'package-lock.json', 'yarn.lock', 'pnpm-lock.yaml', 'composer.lock', 'Gemfile.lock', '.env', '.env.local', '.env.production',\n// Binary and media files\n'.png', '.jpg', '.jpeg', '.gif', '.bmp', '.ico', '.svg', '.mp3', '.mp4', '.avi', '.mov', '.wav', '.zip', '.tar', '.gz', '.rar', '.7z', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.exe', '.dll', '.so', '.dylib', '.woff', '.woff2', '.ttf', '.otf', '.eot',\n// Compiled files\n'.pyc', '.pyo', '.class', '.o', '.obj',\n// Logs and temp files\n'.log', '.tmp', '.temp', '.swp', '.swo',\n// Test snapshots\n'__snapshots__/', '.snap'];\nconst SimplePage = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('files');\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState(new Set());\n  const [fileTree, setFileTree] = useState(null);\n  const [expandedFolders, setExpandedFolders] = useState(new Set());\n  const [url, setUrl] = useState('');\n  const [isLoadingUrl, setIsLoadingUrl] = useState(false);\n  const [context, setContext] = useState('');\n  const [copied, setCopied] = useState(false);\n\n  // Check if file should be blacklisted\n  const shouldSkipFile = filePath => {\n    const normalizedPath = filePath.replace(/\\\\/g, '/');\n    return BLACKLIST_PATTERNS.some(pattern => {\n      if (pattern.includes('/')) {\n        // Directory pattern\n        return normalizedPath.includes(pattern);\n      } else if (pattern.startsWith('.')) {\n        // Extension pattern\n        return normalizedPath.endsWith(pattern);\n      } else {\n        // Filename pattern\n        const filename = normalizedPath.split('/').pop();\n        return filename === pattern;\n      }\n    });\n  };\n\n  // Build file tree structure\n  const buildFileTree = files => {\n    const tree = {\n      name: 'root',\n      children: {},\n      files: []\n    };\n    files.forEach(file => {\n      const parts = file.path.split('/').filter(p => p);\n      let current = tree;\n      parts.forEach((part, index) => {\n        if (index === parts.length - 1) {\n          // It's a file\n          current.files.push({\n            name: part,\n            path: file.path,\n            size: file.size\n          });\n        } else {\n          // It's a directory\n          if (!current.children[part]) {\n            current.children[part] = {\n              name: part,\n              children: {},\n              files: []\n            };\n          }\n          current = current.children[part];\n        }\n      });\n    });\n    return tree;\n  };\n\n  // File processing function\n  const processFiles = useCallback(async fileList => {\n    const textFiles = [];\n    for (const file of fileList) {\n      const filePath = file.webkitRelativePath || file.name;\n\n      // Skip blacklisted files\n      if (shouldSkipFile(filePath)) {\n        continue;\n      }\n      if (file.name.endsWith('.zip')) {\n        // Handle zip files\n        const zip = new JSZip();\n        try {\n          const content = await zip.loadAsync(file);\n          const promises = [];\n          content.forEach((relativePath, zipEntry) => {\n            if (!zipEntry.dir && !shouldSkipFile(relativePath) && isTextFile(relativePath)) {\n              promises.push(zipEntry.async('string').then(text => ({\n                name: relativePath,\n                path: relativePath,\n                content: text,\n                size: text.length\n              })));\n            }\n          });\n          const zipFiles = await Promise.all(promises);\n          textFiles.push(...zipFiles);\n        } catch (error) {\n          console.error('Error processing zip:', error);\n        }\n      } else if (isTextFile(file.name)) {\n        const text = await readFileAsText(file);\n        textFiles.push({\n          name: file.name,\n          path: filePath,\n          content: text,\n          size: file.size\n        });\n      }\n    }\n    setFiles(prev => {\n      const newFiles = [...prev, ...textFiles];\n\n      // Auto-select new files\n      const newSelected = new Set(selectedFiles);\n      textFiles.forEach((_, index) => {\n        newSelected.add(prev.length + index);\n      });\n      setSelectedFiles(newSelected);\n\n      // Update context with selected files only\n      updateContext(newFiles, newSelected);\n\n      // Build file tree if we have files with paths\n      if (newFiles.some(f => f.path && f.path.includes('/'))) {\n        const tree = buildFileTree(newFiles);\n        setFileTree(tree);\n\n        // Default expand first level\n        const firstLevelFolders = new Set();\n        Object.keys(tree.children).forEach(folderName => {\n          firstLevelFolders.add(folderName);\n        });\n        setExpandedFolders(firstLevelFolders);\n      }\n      return newFiles;\n    });\n  }, [selectedFiles]);\n\n  // File handling\n  const handleFileSelect = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    processFiles(selectedFiles);\n  }, [processFiles]);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    processFiles(droppedFiles);\n  }, [processFiles]);\n  const readFileAsText = file => {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = () => resolve('Error reading file');\n      reader.readAsText(file);\n    });\n  };\n  const isTextFile = fileName => {\n    var _fileName$split$pop;\n    const textExtensions = ['txt', 'md', 'json', 'js', 'jsx', 'ts', 'tsx', 'css', 'html', 'xml', 'py', 'java', 'c', 'cpp', 'h', 'cs', 'go', 'rb', 'php', 'sh', 'yaml', 'yml'];\n    const ext = (_fileName$split$pop = fileName.split('.').pop()) === null || _fileName$split$pop === void 0 ? void 0 : _fileName$split$pop.toLowerCase();\n    return textExtensions.includes(ext) || fileName.includes('README') || fileName.startsWith('.');\n  };\n\n  // URL handling\n  const handleUrlFetch = async () => {\n    if (!url) return;\n    setIsLoadingUrl(true);\n    try {\n      const proxyUrl = `https://api.allorigins.win/raw?url=${encodeURIComponent(url)}`;\n      const response = await fetch(proxyUrl);\n      if (!response.ok) throw new Error('Failed to fetch');\n      const html = await response.text();\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      const text = tempDiv.textContent || tempDiv.innerText || '';\n      const cleanText = text.replace(/\\s\\s+/g, ' ').trim().substring(0, 10000);\n      const urlFile = {\n        name: new URL(url).hostname,\n        content: cleanText,\n        size: cleanText.length,\n        isUrl: true\n      };\n      setFiles(prev => {\n        const newFiles = [...prev, urlFile];\n\n        // Auto-select the new URL file\n        const newSelected = new Set(selectedFiles);\n        newSelected.add(prev.length);\n        setSelectedFiles(newSelected);\n        updateContext(newFiles, newSelected);\n        return newFiles;\n      });\n      setUrl('');\n    } catch (error) {\n      alert('Failed to fetch URL. Please try again.');\n    } finally {\n      setIsLoadingUrl(false);\n    }\n  };\n\n  // Generate ASCII directory tree\n  const generateDirectoryTree = fileList => {\n    if (!fileList.some(f => f.path && f.path.includes('/'))) return '';\n    const tree = {\n      name: 'root',\n      children: {},\n      files: []\n    };\n\n    // Build tree structure\n    fileList.forEach(file => {\n      if (!file.path || !file.path.includes('/')) return;\n      const parts = file.path.split('/').filter(p => p);\n      let current = tree;\n      parts.forEach((part, index) => {\n        if (index === parts.length - 1) {\n          // It's a file\n          current.files.push(part);\n        } else {\n          // It's a directory\n          if (!current.children[part]) {\n            current.children[part] = {\n              name: part,\n              children: {},\n              files: []\n            };\n          }\n          current = current.children[part];\n        }\n      });\n    });\n\n    // Render tree as ASCII\n    const renderTree = (node, prefix = '', isLast = true) => {\n      let result = '';\n      const entries = Object.entries(node.children);\n      const allItems = [...entries, ...node.files.map(f => [f, null])];\n      allItems.forEach(([name, child], index) => {\n        const isLastItem = index === allItems.length - 1;\n        const connector = isLastItem ? '└── ' : '├── ';\n        const isFile = child === null;\n        result += prefix + connector + name + (isFile ? '' : '/') + '\\n';\n        if (!isFile) {\n          const extension = isLastItem ? '    ' : '│   ';\n          result += renderTree(child, prefix + extension, isLastItem);\n        }\n      });\n      return result;\n    };\n    return '```\\n' + renderTree(tree) + '```\\n\\n';\n  };\n\n  // Context handling\n  const updateContext = (fileList, selectedSet = selectedFiles) => {\n    const selectedFilesList = fileList.filter((_, index) => selectedSet.has(index));\n    if (selectedFilesList.length === 0) {\n      setContext('');\n      return;\n    }\n\n    // Generate directory tree if we have folder structure\n    const treeText = generateDirectoryTree(selectedFilesList);\n\n    // Generate file contents\n    const contextText = selectedFilesList.map(file => `## ${file.isUrl ? 'URL' : 'File'}: ${file.path || file.name}\\n\\n${file.content}\\n`).join('\\n---\\n\\n');\n    setContext(treeText + contextText);\n  };\n  const removeFile = index => {\n    const newFiles = files.filter((_, i) => i !== index);\n    setFiles(newFiles);\n\n    // Update selected files indices\n    const newSelected = new Set();\n    selectedFiles.forEach(i => {\n      if (i < index) newSelected.add(i);else if (i > index) newSelected.add(i - 1);\n    });\n    setSelectedFiles(newSelected);\n    updateContext(newFiles, newSelected);\n\n    // Rebuild file tree if needed\n    if (newFiles.some(f => f.path && f.path.includes('/'))) {\n      const tree = buildFileTree(newFiles);\n      setFileTree(tree);\n    } else {\n      setFileTree(null);\n    }\n  };\n  const clearAll = () => {\n    setFiles([]);\n    setSelectedFiles(new Set());\n    setFileTree(null);\n    setExpandedFolders(new Set());\n    setContext('');\n    setUrl('');\n  };\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(context);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      alert('Failed to copy to clipboard');\n    }\n  };\n  const downloadContext = () => {\n    const blob = new Blob([context], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'context.txt';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Toggle file selection\n  const toggleFileSelection = index => {\n    const newSelected = new Set(selectedFiles);\n    if (newSelected.has(index)) {\n      newSelected.delete(index);\n    } else {\n      newSelected.add(index);\n    }\n    setSelectedFiles(newSelected);\n    updateContext(files, newSelected);\n  };\n\n  // Toggle folder expansion\n  const toggleFolder = path => {\n    const newExpanded = new Set(expandedFolders);\n    if (newExpanded.has(path)) {\n      newExpanded.delete(path);\n    } else {\n      newExpanded.add(path);\n    }\n    setExpandedFolders(newExpanded);\n  };\n\n  // Render file tree recursively\n  const renderFileTree = (node, path = '') => {\n    if (!node) return null;\n    const currentPath = path ? `${path}/${node.name}` : node.name;\n    const isExpanded = expandedFolders.has(currentPath);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-node\",\n      children: [Object.entries(node.children).map(([name, child]) => {\n        const folderPath = path ? `${path}/${name}` : name;\n        const isExpanded = expandedFolders.has(folderPath);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-folder\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-item folder-item\",\n            onClick: () => toggleFolder(folderPath),\n            children: [isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 59\n            }, this), /*#__PURE__*/_jsxDEV(Folder, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-children\",\n            children: renderFileTree(child, folderPath)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }, this)]\n        }, folderPath, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this);\n      }), node.files.map(file => {\n        const fileIndex = files.findIndex(f => f.path === file.path);\n        const isSelected = selectedFiles.has(fileIndex);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-item file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isSelected,\n            onChange: () => toggleFileSelection(fileIndex),\n            className: \"file-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FileCode2, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-size\",\n            children: [(file.size / 1024).toFixed(1), \" KB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, file.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Context Builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-secondary\",\n        children: \"Prepare content for LLM interactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab ${activeTab === 'files' ? 'active' : ''}`,\n            onClick: () => setActiveTab('files'),\n            children: [/*#__PURE__*/_jsxDEV(FileCode2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), \"Files\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab ${activeTab === 'url' ? 'active' : ''}`,\n            onClick: () => setActiveTab('url'),\n            children: [/*#__PURE__*/_jsxDEV(Globe, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), \"URL\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), activeTab === 'files' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-zone\",\n          onDrop: handleDrop,\n          onDragOver: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(FileCode2, {\n            size: 32,\n            className: \"drop-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drop files here or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-secondary\",\n            children: \"Supports text files and ZIP archives\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            webkitdirectory: \"\",\n            directory: \"\",\n            onChange: handleFileSelect,\n            style: {\n              display: 'none'\n            },\n            id: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-input\",\n            className: \"file-input-label\",\n            children: \"Select Files or Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            value: url,\n            onChange: e => setUrl(e.target.value),\n            placeholder: \"https://example.com\",\n            onKeyPress: e => e.key === 'Enter' && handleUrlFetch()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUrlFetch,\n            disabled: !url || isLoadingUrl,\n            children: isLoadingUrl ? 'Fetching...' : 'Fetch'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Sources (\", files.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"secondary\",\n            onClick: clearAll,\n            children: [/*#__PURE__*/_jsxDEV(Trash2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), \"Clear All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), fileTree && fileTree.children && Object.keys(fileTree.children).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-tree\",\n          children: renderFileTree(fileTree)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-list\",\n          children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedFiles.has(index),\n              onChange: () => toggleFileSelection(index),\n              className: \"file-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: [file.isUrl ? /*#__PURE__*/_jsxDEV(Globe, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(FileCode2, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 59\n              }, this), file.path || file.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: [(file.size / 1024).toFixed(1), \" KB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button\",\n              onClick: () => removeFile(index),\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this), context && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"context-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Generated Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"context-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: copyToClipboard,\n              children: [copied ? /*#__PURE__*/_jsxDEV(Check, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 29\n              }, this) : /*#__PURE__*/_jsxDEV(Copy, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 51\n              }, this), copied ? 'Copied!' : 'Copy']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"secondary\",\n              onClick: downloadContext,\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 19\n              }, this), \"Download\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: context,\n          readOnly: true,\n          className: \"context-output\",\n          placeholder: \"Your generated context will appear here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n};\n_s(SimplePage, \"zvk88ukg8eWq3HXEDOGgdVN4rAE=\");\n_c = SimplePage;\nexport default SimplePage;\nvar _c;\n$RefreshReg$(_c, \"SimplePage\");","map":{"version":3,"names":["React","useState","useCallback","FileCode2","Globe","Copy","Download","Trash2","Check","Folder","ChevronRight","ChevronDown","JSZip","jsxDEV","_jsxDEV","BLACKLIST_PATTERNS","SimplePage","_s","activeTab","setActiveTab","files","setFiles","selectedFiles","setSelectedFiles","Set","fileTree","setFileTree","expandedFolders","setExpandedFolders","url","setUrl","isLoadingUrl","setIsLoadingUrl","context","setContext","copied","setCopied","shouldSkipFile","filePath","normalizedPath","replace","some","pattern","includes","startsWith","endsWith","filename","split","pop","buildFileTree","tree","name","children","forEach","file","parts","path","filter","p","current","part","index","length","push","size","processFiles","fileList","textFiles","webkitRelativePath","zip","content","loadAsync","promises","relativePath","zipEntry","dir","isTextFile","async","then","text","zipFiles","Promise","all","error","console","readFileAsText","prev","newFiles","newSelected","_","add","updateContext","f","firstLevelFolders","Object","keys","folderName","handleFileSelect","e","Array","from","target","handleDrop","preventDefault","droppedFiles","dataTransfer","resolve","reader","FileReader","onload","result","onerror","readAsText","fileName","_fileName$split$pop","textExtensions","ext","toLowerCase","handleUrlFetch","proxyUrl","encodeURIComponent","response","fetch","ok","Error","html","tempDiv","document","createElement","innerHTML","textContent","innerText","cleanText","trim","substring","urlFile","URL","hostname","isUrl","alert","generateDirectoryTree","renderTree","node","prefix","isLast","entries","allItems","map","child","isLastItem","connector","isFile","extension","selectedSet","selectedFilesList","has","treeText","contextText","join","removeFile","i","clearAll","copyToClipboard","navigator","clipboard","writeText","setTimeout","err","downloadContext","blob","Blob","type","createObjectURL","a","href","download","click","revokeObjectURL","toggleFileSelection","delete","toggleFolder","newExpanded","renderFileTree","currentPath","isExpanded","className","folderPath","onClick","_jsxFileName","lineNumber","columnNumber","fileIndex","findIndex","isSelected","checked","onChange","toFixed","onDrop","onDragOver","multiple","webkitdirectory","directory","style","display","id","htmlFor","value","placeholder","onKeyPress","key","disabled","readOnly","_c","$RefreshReg$"],"sources":["/Users/yushaw/dev/context.isallyouneed.io/src/pages/SimplePage.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { FileCode2, Globe, Copy, Download, Trash2, Check, Folder, ChevronRight, ChevronDown } from 'lucide-react';\nimport JSZip from 'jszip';\n\n// File blacklist patterns\nconst BLACKLIST_PATTERNS = [\n  // Dependencies\n  'node_modules/',\n  'vendor/',\n  'bower_components/',\n  '.pnp/',\n  '.yarn/',\n  \n  // Build outputs\n  'dist/',\n  'build/',\n  'out/',\n  '.next/',\n  '.nuxt/',\n  '.cache/',\n  'coverage/',\n  \n  // IDE & OS\n  '.idea/',\n  '.vscode/',\n  '.DS_Store',\n  'Thumbs.db',\n  \n  // Version control\n  '.git/',\n  '.svn/',\n  '.hg/',\n  \n  // Config files we want to skip\n  'package-lock.json',\n  'yarn.lock',\n  'pnpm-lock.yaml',\n  'composer.lock',\n  'Gemfile.lock',\n  '.env',\n  '.env.local',\n  '.env.production',\n  \n  // Binary and media files\n  '.png', '.jpg', '.jpeg', '.gif', '.bmp', '.ico', '.svg',\n  '.mp3', '.mp4', '.avi', '.mov', '.wav',\n  '.zip', '.tar', '.gz', '.rar', '.7z',\n  '.pdf', '.doc', '.docx', '.xls', '.xlsx',\n  '.exe', '.dll', '.so', '.dylib',\n  '.woff', '.woff2', '.ttf', '.otf', '.eot',\n  \n  // Compiled files\n  '.pyc', '.pyo', '.class', '.o', '.obj',\n  \n  // Logs and temp files\n  '.log', '.tmp', '.temp', '.swp', '.swo',\n  \n  // Test snapshots\n  '__snapshots__/',\n  '.snap'\n];\n\nconst SimplePage = () => {\n  const [activeTab, setActiveTab] = useState('files');\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState(new Set());\n  const [fileTree, setFileTree] = useState(null);\n  const [expandedFolders, setExpandedFolders] = useState(new Set());\n  const [url, setUrl] = useState('');\n  const [isLoadingUrl, setIsLoadingUrl] = useState(false);\n  const [context, setContext] = useState('');\n  const [copied, setCopied] = useState(false);\n\n  // Check if file should be blacklisted\n  const shouldSkipFile = (filePath) => {\n    const normalizedPath = filePath.replace(/\\\\/g, '/');\n    return BLACKLIST_PATTERNS.some(pattern => {\n      if (pattern.includes('/')) {\n        // Directory pattern\n        return normalizedPath.includes(pattern);\n      } else if (pattern.startsWith('.')) {\n        // Extension pattern\n        return normalizedPath.endsWith(pattern);\n      } else {\n        // Filename pattern\n        const filename = normalizedPath.split('/').pop();\n        return filename === pattern;\n      }\n    });\n  };\n\n  // Build file tree structure\n  const buildFileTree = (files) => {\n    const tree = { name: 'root', children: {}, files: [] };\n    \n    files.forEach(file => {\n      const parts = file.path.split('/').filter(p => p);\n      let current = tree;\n      \n      parts.forEach((part, index) => {\n        if (index === parts.length - 1) {\n          // It's a file\n          current.files.push({ name: part, path: file.path, size: file.size });\n        } else {\n          // It's a directory\n          if (!current.children[part]) {\n            current.children[part] = { name: part, children: {}, files: [] };\n          }\n          current = current.children[part];\n        }\n      });\n    });\n    \n    return tree;\n  };\n\n  // File processing function\n  const processFiles = useCallback(async (fileList) => {\n    const textFiles = [];\n    \n    for (const file of fileList) {\n      const filePath = file.webkitRelativePath || file.name;\n      \n      // Skip blacklisted files\n      if (shouldSkipFile(filePath)) {\n        continue;\n      }\n      \n      if (file.name.endsWith('.zip')) {\n        // Handle zip files\n        const zip = new JSZip();\n        try {\n          const content = await zip.loadAsync(file);\n          const promises = [];\n          \n          content.forEach((relativePath, zipEntry) => {\n            if (!zipEntry.dir && !shouldSkipFile(relativePath) && isTextFile(relativePath)) {\n              promises.push(\n                zipEntry.async('string').then(text => ({\n                  name: relativePath,\n                  path: relativePath,\n                  content: text,\n                  size: text.length\n                }))\n              );\n            }\n          });\n          \n          const zipFiles = await Promise.all(promises);\n          textFiles.push(...zipFiles);\n        } catch (error) {\n          console.error('Error processing zip:', error);\n        }\n      } else if (isTextFile(file.name)) {\n        const text = await readFileAsText(file);\n        textFiles.push({\n          name: file.name,\n          path: filePath,\n          content: text,\n          size: file.size\n        });\n      }\n    }\n    \n    setFiles(prev => {\n      const newFiles = [...prev, ...textFiles];\n      \n      // Auto-select new files\n      const newSelected = new Set(selectedFiles);\n      textFiles.forEach((_, index) => {\n        newSelected.add(prev.length + index);\n      });\n      setSelectedFiles(newSelected);\n      \n      // Update context with selected files only\n      updateContext(newFiles, newSelected);\n      \n      // Build file tree if we have files with paths\n      if (newFiles.some(f => f.path && f.path.includes('/'))) {\n        const tree = buildFileTree(newFiles);\n        setFileTree(tree);\n        \n        // Default expand first level\n        const firstLevelFolders = new Set();\n        Object.keys(tree.children).forEach(folderName => {\n          firstLevelFolders.add(folderName);\n        });\n        setExpandedFolders(firstLevelFolders);\n      }\n      \n      return newFiles;\n    });\n  }, [selectedFiles]);\n\n  // File handling\n  const handleFileSelect = useCallback((e) => {\n    const selectedFiles = Array.from(e.target.files);\n    processFiles(selectedFiles);\n  }, [processFiles]);\n\n  const handleDrop = useCallback((e) => {\n    e.preventDefault();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    processFiles(droppedFiles);\n  }, [processFiles]);\n\n  const readFileAsText = (file) => {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (e) => resolve(e.target.result);\n      reader.onerror = () => resolve('Error reading file');\n      reader.readAsText(file);\n    });\n  };\n\n  const isTextFile = (fileName) => {\n    const textExtensions = ['txt', 'md', 'json', 'js', 'jsx', 'ts', 'tsx', 'css', 'html', 'xml', 'py', 'java', 'c', 'cpp', 'h', 'cs', 'go', 'rb', 'php', 'sh', 'yaml', 'yml'];\n    const ext = fileName.split('.').pop()?.toLowerCase();\n    return textExtensions.includes(ext) || fileName.includes('README') || fileName.startsWith('.');\n  };\n\n  // URL handling\n  const handleUrlFetch = async () => {\n    if (!url) return;\n    \n    setIsLoadingUrl(true);\n    try {\n      const proxyUrl = `https://api.allorigins.win/raw?url=${encodeURIComponent(url)}`;\n      const response = await fetch(proxyUrl);\n      \n      if (!response.ok) throw new Error('Failed to fetch');\n      \n      const html = await response.text();\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      const text = tempDiv.textContent || tempDiv.innerText || '';\n      \n      const cleanText = text.replace(/\\s\\s+/g, ' ').trim().substring(0, 10000);\n      \n      const urlFile = {\n        name: new URL(url).hostname,\n        content: cleanText,\n        size: cleanText.length,\n        isUrl: true\n      };\n      \n      setFiles(prev => {\n        const newFiles = [...prev, urlFile];\n        \n        // Auto-select the new URL file\n        const newSelected = new Set(selectedFiles);\n        newSelected.add(prev.length);\n        setSelectedFiles(newSelected);\n        \n        updateContext(newFiles, newSelected);\n        return newFiles;\n      });\n      setUrl('');\n    } catch (error) {\n      alert('Failed to fetch URL. Please try again.');\n    } finally {\n      setIsLoadingUrl(false);\n    }\n  };\n\n  // Generate ASCII directory tree\n  const generateDirectoryTree = (fileList) => {\n    if (!fileList.some(f => f.path && f.path.includes('/'))) return '';\n    \n    const tree = { name: 'root', children: {}, files: [] };\n    \n    // Build tree structure\n    fileList.forEach(file => {\n      if (!file.path || !file.path.includes('/')) return;\n      \n      const parts = file.path.split('/').filter(p => p);\n      let current = tree;\n      \n      parts.forEach((part, index) => {\n        if (index === parts.length - 1) {\n          // It's a file\n          current.files.push(part);\n        } else {\n          // It's a directory\n          if (!current.children[part]) {\n            current.children[part] = { name: part, children: {}, files: [] };\n          }\n          current = current.children[part];\n        }\n      });\n    });\n    \n    // Render tree as ASCII\n    const renderTree = (node, prefix = '', isLast = true) => {\n      let result = '';\n      const entries = Object.entries(node.children);\n      const allItems = [...entries, ...node.files.map(f => [f, null])];\n      \n      allItems.forEach(([name, child], index) => {\n        const isLastItem = index === allItems.length - 1;\n        const connector = isLastItem ? '└── ' : '├── ';\n        const isFile = child === null;\n        \n        result += prefix + connector + name + (isFile ? '' : '/') + '\\n';\n        \n        if (!isFile) {\n          const extension = isLastItem ? '    ' : '│   ';\n          result += renderTree(child, prefix + extension, isLastItem);\n        }\n      });\n      \n      return result;\n    };\n    \n    return '```\\n' + renderTree(tree) + '```\\n\\n';\n  };\n\n  // Context handling\n  const updateContext = (fileList, selectedSet = selectedFiles) => {\n    const selectedFilesList = fileList.filter((_, index) => selectedSet.has(index));\n    \n    if (selectedFilesList.length === 0) {\n      setContext('');\n      return;\n    }\n    \n    // Generate directory tree if we have folder structure\n    const treeText = generateDirectoryTree(selectedFilesList);\n    \n    // Generate file contents\n    const contextText = selectedFilesList\n      .map(file => `## ${file.isUrl ? 'URL' : 'File'}: ${file.path || file.name}\\n\\n${file.content}\\n`)\n      .join('\\n---\\n\\n');\n    \n    setContext(treeText + contextText);\n  };\n\n  const removeFile = (index) => {\n    const newFiles = files.filter((_, i) => i !== index);\n    setFiles(newFiles);\n    \n    // Update selected files indices\n    const newSelected = new Set();\n    selectedFiles.forEach(i => {\n      if (i < index) newSelected.add(i);\n      else if (i > index) newSelected.add(i - 1);\n    });\n    setSelectedFiles(newSelected);\n    \n    updateContext(newFiles, newSelected);\n    \n    // Rebuild file tree if needed\n    if (newFiles.some(f => f.path && f.path.includes('/'))) {\n      const tree = buildFileTree(newFiles);\n      setFileTree(tree);\n    } else {\n      setFileTree(null);\n    }\n  };\n\n  const clearAll = () => {\n    setFiles([]);\n    setSelectedFiles(new Set());\n    setFileTree(null);\n    setExpandedFolders(new Set());\n    setContext('');\n    setUrl('');\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(context);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      alert('Failed to copy to clipboard');\n    }\n  };\n\n  const downloadContext = () => {\n    const blob = new Blob([context], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'context.txt';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Toggle file selection\n  const toggleFileSelection = (index) => {\n    const newSelected = new Set(selectedFiles);\n    if (newSelected.has(index)) {\n      newSelected.delete(index);\n    } else {\n      newSelected.add(index);\n    }\n    setSelectedFiles(newSelected);\n    updateContext(files, newSelected);\n  };\n\n  // Toggle folder expansion\n  const toggleFolder = (path) => {\n    const newExpanded = new Set(expandedFolders);\n    if (newExpanded.has(path)) {\n      newExpanded.delete(path);\n    } else {\n      newExpanded.add(path);\n    }\n    setExpandedFolders(newExpanded);\n  };\n\n  // Render file tree recursively\n  const renderFileTree = (node, path = '') => {\n    if (!node) return null;\n    \n    const currentPath = path ? `${path}/${node.name}` : node.name;\n    const isExpanded = expandedFolders.has(currentPath);\n    \n    return (\n      <div className=\"tree-node\">\n        {/* Render folders */}\n        {Object.entries(node.children).map(([name, child]) => {\n          const folderPath = path ? `${path}/${name}` : name;\n          const isExpanded = expandedFolders.has(folderPath);\n          \n          return (\n            <div key={folderPath} className=\"tree-folder\">\n              <div \n                className=\"tree-item folder-item\"\n                onClick={() => toggleFolder(folderPath)}\n              >\n                {isExpanded ? <ChevronDown size={14} /> : <ChevronRight size={14} />}\n                <Folder size={14} />\n                <span>{name}</span>\n              </div>\n              {isExpanded && (\n                <div className=\"tree-children\">\n                  {renderFileTree(child, folderPath)}\n                </div>\n              )}\n            </div>\n          );\n        })}\n        \n        {/* Render files */}\n        {node.files.map(file => {\n          const fileIndex = files.findIndex(f => f.path === file.path);\n          const isSelected = selectedFiles.has(fileIndex);\n          \n          return (\n            <div key={file.path} className=\"tree-item file-item\">\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={() => toggleFileSelection(fileIndex)}\n                className=\"file-checkbox\"\n              />\n              <FileCode2 size={14} />\n              <span>{file.name}</span>\n              <span className=\"file-size\">{(file.size / 1024).toFixed(1)} KB</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"header\">\n        <h1>Context Builder</h1>\n        <p className=\"text-secondary\">Prepare content for LLM interactions</p>\n      </header>\n\n      <main className=\"main-content\">\n        {/* Input Section */}\n        <div className=\"card mb-3\">\n          <div className=\"tabs\">\n            <button \n              className={`tab ${activeTab === 'files' ? 'active' : ''}`}\n              onClick={() => setActiveTab('files')}\n            >\n              <FileCode2 size={16} />\n              Files\n            </button>\n            <button \n              className={`tab ${activeTab === 'url' ? 'active' : ''}`}\n              onClick={() => setActiveTab('url')}\n            >\n              <Globe size={16} />\n              URL\n            </button>\n          </div>\n\n          {activeTab === 'files' ? (\n            <div \n              className=\"drop-zone\"\n              onDrop={handleDrop}\n              onDragOver={(e) => e.preventDefault()}\n            >\n              <FileCode2 size={32} className=\"drop-icon\" />\n              <p>Drop files here or click to select</p>\n              <p className=\"text-secondary\">Supports text files and ZIP archives</p>\n              <input\n                type=\"file\"\n                multiple\n                webkitdirectory=\"\"\n                directory=\"\"\n                onChange={handleFileSelect}\n                style={{ display: 'none' }}\n                id=\"file-input\"\n              />\n              <label htmlFor=\"file-input\" className=\"file-input-label\">\n                Select Files or Folder\n              </label>\n            </div>\n          ) : (\n            <div className=\"url-input\">\n              <input\n                type=\"url\"\n                value={url}\n                onChange={(e) => setUrl(e.target.value)}\n                placeholder=\"https://example.com\"\n                onKeyPress={(e) => e.key === 'Enter' && handleUrlFetch()}\n              />\n              <button \n                onClick={handleUrlFetch} \n                disabled={!url || isLoadingUrl}\n              >\n                {isLoadingUrl ? 'Fetching...' : 'Fetch'}\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Files List */}\n        {files.length > 0 && (\n          <div className=\"card mb-3\">\n            <div className=\"files-header\">\n              <h2>Sources ({files.length})</h2>\n              <button className=\"secondary\" onClick={clearAll}>\n                <Trash2 size={16} />\n                Clear All\n              </button>\n            </div>\n            \n            {/* Show file tree if available, otherwise show flat list */}\n            {fileTree && fileTree.children && Object.keys(fileTree.children).length > 0 ? (\n              <div className=\"file-tree\">\n                {renderFileTree(fileTree)}\n              </div>\n            ) : (\n              <div className=\"files-list\">\n                {files.map((file, index) => (\n                  <div key={index} className=\"file-item\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedFiles.has(index)}\n                      onChange={() => toggleFileSelection(index)}\n                      className=\"file-checkbox\"\n                    />\n                    <span className=\"file-name\">\n                      {file.isUrl ? <Globe size={14} /> : <FileCode2 size={14} />}\n                      {file.path || file.name}\n                    </span>\n                    <span className=\"file-size\">{(file.size / 1024).toFixed(1)} KB</span>\n                    <button \n                      className=\"icon-button\"\n                      onClick={() => removeFile(index)}\n                    >\n                      <Trash2 size={14} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Context Output */}\n        {context && (\n          <div className=\"card\">\n            <div className=\"context-header\">\n              <h2>Generated Context</h2>\n              <div className=\"context-actions\">\n                <button onClick={copyToClipboard}>\n                  {copied ? <Check size={16} /> : <Copy size={16} />}\n                  {copied ? 'Copied!' : 'Copy'}\n                </button>\n                <button className=\"secondary\" onClick={downloadContext}>\n                  <Download size={16} />\n                  Download\n                </button>\n              </div>\n            </div>\n            <textarea\n              value={context}\n              readOnly\n              className=\"context-output\"\n              placeholder=\"Your generated context will appear here...\"\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default SimplePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}