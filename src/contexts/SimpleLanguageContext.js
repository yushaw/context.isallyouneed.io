import React, { createContext, useContext, useState } from 'react';

const translations = {
  en: {
    "files": "Files",
    "url": "URL", 
    "url.title": "Website Scraper",
    "url.description.note": "Note: ",
    "url.description.cors": "Most websites have CORS restrictions and cannot be accessed directly.",
    "url.description.suggestion": "Suggestion: ",
    "url.description.recommend": "Use the bookmarklet tool below for reliable content extraction!",
    "url.bookmarklet.title": "One-Click Content Extraction Bookmarklet",
    "url.bookmarklet.description": "Drag the link below to your browser bookmarks bar, then click it on any webpage to extract content:",
    "url.bookmarklet.link": "Extract Web Content",
    "url.bookmarklet.instructions": "How to use:",
    "url.bookmarklet.step1": "Right-click the \"Extract Web Content\" link above → Select \"Add to Bookmarks Bar\"",
    "url.bookmarklet.step2": "Open the webpage you want to extract (e.g., news articles, blogs, documentation)",
    "url.bookmarklet.step3": "Click the \"Extract Web Content\" bookmark in your bookmarks bar",
    "url.bookmarklet.step4": "A new window will pop up showing the extracted content, which you can copy or download",
    "url.bookmarklet.step5": "Paste the content into this site's file function for processing",
    "url.bookmarklet.defaultTitle": "Web Content",
    "url.bookmarklet.sourceUrl": "Source URL",
    "url.bookmarklet.captureTime": "Capture Time",
    "url.bookmarklet.success": "Content Extracted Successfully",
    "url.bookmarklet.instruction": "Content has been extracted. Please copy the text below:",
    "url.bookmarklet.copied": "Copied to clipboard!",
    "url.bookmarklet.copyBtn": "📋 Copy Content",
    "url.bookmarklet.downloadBtn": "💾 Download File",
    "url.bookmarklet.closeBtn": "❌ Close Window",
    "url.input.placeholder": "Enter website URL (e.g., https://example.com)",
    "url.fetch.button": "Fetch Content",
    "url.fetch.loading": "Fetching...",
    "input.url.required": "Please enter a URL",
    "input.url.invalid": "Please enter a valid URL",
    "files.sources.title": "Sources",
    "files.sources.clear": "Clear All",
    "files.upload.processor.title": "File Processor",
    "files.upload.processor.description": "Upload files, folders, or a ZIP archive. Text-based files within folders/ZIPs will be extracted.",
    "files.upload.processing": "Please wait while we process your files",
    "files.context.title": "Generated Context",
    "files.context.copy": "Copy Context",
    "files.context.download": "Download",
    "files.context.placeholder": "Processed context will appear here...",
    "files.context.copied": "Context copied to clipboard!",
    "files.context.copy.failed": "Failed to copy context. See console for details.",
    "files.context.nothing.copy": "Nothing to copy.",
    "files.context.nothing.download": "Nothing to download.",
    "files.upload.description": "Drag and drop files/folders here, or click to browse",
    "files.upload.browse": "Browse Files",
    "files.upload.loading": "Processing files...",
    "file.type.binary": "Binary",
    "file.type.config": "Config", 
    "file.type.ignored": "Ignored",
    "footer.text": "Context Builder - AI-powered code analysis tool",
    "content.truncated": "Content truncated",
    "content.truncated.length": "exceeds length limit",
    "error.fetch.failed": "❌ Failed to fetch URL content",
    "error.fetch.cors": "The website {hostname} has CORS restrictions that prevent direct access.",
    "error.fetch.solutions": "💡 Here are some solutions:",
    "error.method.copy": "📋 Method 1: Manual Copy",
    "error.method.copy.step1": "• Open the webpage in your browser",
    "error.method.copy.step2": "• Select and copy the text content",
    "error.method.copy.step3": "• Create a new text file",
    "error.method.copy.step4": "• Paste the content and upload the file here",
    "error.method.save": "💾 Method 2: Save As HTML",
    "error.method.save.step1": "• Right-click on the webpage → 'Save As'",
    "error.method.save.step2": "• Upload the saved HTML file here",
    "error.method.devtools": "🔧 Method 3: Developer Tools",
    "error.method.devtools.step1": "• Press F12 to open developer tools",
    "error.method.devtools.step2": "• Navigate to Console tab",
    "error.method.devtools.step3": "• Copy the page content using JavaScript",
    "error.cors.tip": "💡 Tip: Use the bookmarklet tool above for easier content extraction!",
    "error.network.title": "🌐 Network Error",
    "error.general.message": "Error: {error}",
    "error.network.check": "Please check:",
    "error.network.connection": "• Internet connection",
    "error.network.url": "• URL correctness",
    "error.network.vpn": "• VPN or proxy settings",
    "error.network.suggestion": "💡 Suggestion: Try using the bookmarklet tool for more reliable access.",
    "error.404.title": "🔍 Page Not Found (404)",
    "error.404.message": "The requested page could not be found.",
    "error.404.check": "Please check:",
    "error.404.url.complete": "• URL is complete and correct",
    "error.404.moved": "• Page hasn't been moved or deleted",
    "error.404.login": "• You don't need to login to access the page",
    "error.general.title": "⚠️ Fetch Error",
    "error.general.reasons": "Possible reasons:",
    "error.general.server": "• Server error or maintenance",
    "error.general.format": "• Unsupported content format",
    "error.general.permission": "• Access permission required",
    "error.general.blocked": "• Content blocked by security policy",
    "error.general.suggestion": "💡 Suggestion: Try alternative methods or use the bookmarklet tool."
  },
  zh: {
    "files": "文件",
    "url": "网址",
    "url.title": "网页抓取器",
    "url.description.note": "注意：",
    "url.description.cors": "大多数网站都有CORS限制，无法直接访问。",
    "url.description.suggestion": "建议：",
    "url.description.recommend": "使用下面的书签工具进行可靠的内容提取！",
    "url.bookmarklet.title": "一键内容提取书签工具",
    "url.bookmarklet.description": "将下面的链接拖拽到浏览器书签栏，然后在任何网页上点击它来提取内容：",
    "url.bookmarklet.link": "提取网页内容",
    "url.bookmarklet.instructions": "使用方法：",
    "url.bookmarklet.step1": "右键点击上面的\"提取网页内容\"链接 → 选择\"添加到书签栏\"",
    "url.bookmarklet.step2": "打开您想要提取的网页（如新闻文章、博客、文档等）",
    "url.bookmarklet.step3": "点击书签栏中的\"提取网页内容\"书签",
    "url.bookmarklet.step4": "将弹出一个新窗口显示提取的内容，您可以复制或下载",
    "url.bookmarklet.step5": "将内容粘贴到本站的文件功能中进行处理",
    "url.bookmarklet.defaultTitle": "网页内容",
    "url.bookmarklet.sourceUrl": "来源网址",
    "url.bookmarklet.captureTime": "获取时间",
    "url.bookmarklet.success": "内容提取成功",
    "url.bookmarklet.instruction": "内容已提取完成，请复制下面的文本：",
    "url.bookmarklet.copied": "已复制到剪贴板！",
    "url.bookmarklet.copyBtn": "📋 复制内容",
    "url.bookmarklet.downloadBtn": "💾 下载文件",
    "url.bookmarklet.closeBtn": "❌ 关闭窗口",
    "url.input.placeholder": "输入网站URL（如：https://example.com）",
    "url.fetch.button": "获取内容",
    "url.fetch.loading": "正在获取...",
    "input.url.required": "请输入URL",
    "input.url.invalid": "请输入有效的URL",
    "files.sources.title": "源文件",
    "files.sources.clear": "清空所有",
    "files.upload.processor.title": "文件处理器",
    "files.upload.processor.description": "上传文件、文件夹或ZIP压缩包。文件夹/ZIP内的文本文件将被提取。",
    "files.upload.processing": "正在处理您的文件，请稍候",
    "files.context.title": "生成的上下文",
    "files.context.copy": "复制上下文",
    "files.context.download": "下载",
    "files.context.placeholder": "处理后的上下文将在此显示...",
    "files.context.copied": "上下文已复制到剪贴板！",
    "files.context.copy.failed": "复制失败。请查看控制台了解详情。",
    "files.context.nothing.copy": "没有可复制的内容。",
    "files.context.nothing.download": "没有可下载的内容。",
    "files.upload.description": "将文件/文件夹拖拽到此处，或点击浏览",
    "files.upload.browse": "浏览文件",
    "files.upload.loading": "正在处理文件...",
    "file.type.binary": "二进制",
    "file.type.config": "配置",
    "file.type.ignored": "忽略", 
    "footer.text": "上下文构建器 - AI驱动的代码分析工具",
    "content.truncated": "内容已截断",
    "content.truncated.length": "超出长度限制",
    "error.fetch.failed": "❌ 获取URL内容失败",
    "error.fetch.cors": "网站 {hostname} 有CORS限制，阻止直接访问。",
    "error.fetch.solutions": "💡 以下是一些解决方案：",
    "error.method.copy": "📋 方法一：手动复制",
    "error.method.copy.step1": "• 在浏览器中打开该网页",
    "error.method.copy.step2": "• 选择并复制文本内容",
    "error.method.copy.step3": "• 创建一个新的文本文件",
    "error.method.copy.step4": "• 粘贴内容并在此处上传文件",
    "error.method.save": "💾 方法二：另存为HTML",
    "error.method.save.step1": "• 右键点击网页 → \"另存为\"",
    "error.method.save.step2": "• 在此处上传保存的HTML文件",
    "error.method.devtools": "🔧 方法三：开发者工具",
    "error.method.devtools.step1": "• 按F12打开开发者工具",
    "error.method.devtools.step2": "• 导航到控制台标签",
    "error.method.devtools.step3": "• 使用JavaScript复制页面内容",
    "error.cors.tip": "💡 提示：使用上面的书签工具可以更轻松地提取内容！",
    "error.network.title": "🌐 网络错误",
    "error.general.message": "错误：{error}",
    "error.network.check": "请检查：",
    "error.network.connection": "• 网络连接",
    "error.network.url": "• URL正确性",
    "error.network.vpn": "• VPN或代理设置",
    "error.network.suggestion": "💡 建议：尝试使用书签工具以获得更可靠的访问。",
    "error.404.title": "🔍 页面未找到 (404)",
    "error.404.message": "请求的页面无法找到。",
    "error.404.check": "请检查：",
    "error.404.url.complete": "• URL是否完整正确",
    "error.404.moved": "• 页面是否已被移动或删除",
    "error.404.login": "• 是否需要登录才能访问页面",
    "error.general.title": "⚠️ 获取错误",
    "error.general.reasons": "可能的原因：",
    "error.general.server": "• 服务器错误或维护中",
    "error.general.format": "• 不支持的内容格式",
    "error.general.permission": "• 需要访问权限",
    "error.general.blocked": "• 内容被安全策略阻止",
    "error.general.suggestion": "💡 建议：尝试其他方法或使用书签工具。"
  }
};

const LanguageContext = createContext();

export const LanguageProvider = ({ children }) => {
  const [language, setLanguage] = useState(() => {
    const saved = localStorage.getItem('preferred-language');
    return saved || 'en';
  });
  
  const t = (key) => {
    return translations[language]?.[key] || translations.en?.[key] || key;
  };
  
  const switchLanguage = (newLang) => {
    setLanguage(newLang);
    localStorage.setItem('preferred-language', newLang);
  };
  
  return (
    <LanguageContext.Provider value={{ t, language, switchLanguage }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within LanguageProvider');
  }
  return context;
};